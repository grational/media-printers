/*
 * This build file was auto generated by 'gigawatt'
 * @author gsus
 * @date 17-11-2016 12.50
 */

// [plugins] this block must be the first
plugins {
	// support for groovy
	id 'groovy'
	// support to api keyword
	id 'java-library'
	// awesome git tag / gradle version integration
	id 'pl.allegro.tech.build.axion-release' version '1.18.18'
	// to upload on a nexus server
	id 'maven-publish'
}

// [general] configuration
project.ext {
	groovyVersion      = '3.0.25'
	spockVersion       = '2.3-groovy-3.0'
	slf4jVersion       = '2.0.17'
	specSupportVersion = 'release-1.1.3'
}

project.with {
	//project.name is set in the settings.gradle with rootProject.name
	group       'it.grational'
	version     scmVersion.version // '0.5.0' (remove -SNAPSHOT for releases)
	description 'Provide and object the functionality to print itself on a media (currently csv,json)'
}

// [crosscompile] source and target java version
allprojects {
	sourceCompatibility = JavaVersion.toVersion('8')
	targetCompatibility = sourceCompatibility
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	// Groovy language support
	api (
		"org.codehaus.groovy:groovy:$groovyVersion",
		"org.codehaus.groovy:groovy-json:$groovyVersion"
	)

	// We use the awesome Spock testing and specification framework
	testImplementation (
		"org.spockframework:spock-core:$spockVersion",
		"com.github.grational:specification-support:$specSupportVersion"
	)
}

check {
	// clean before check
	dependsOn 'clean'
}

tasks.withType(Test) {
	useJUnitPlatform() 
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = 'com.github.grational'
			artifactId = 'media-printers'
			version = scmVersion.version // '0.5.0' (remove -SNAPSHOT for releases)

			from components.java
		}
	}
}
// vim: ft=groovy:fdm=indent
